{"version":3,"sources":["components/User/User.js","components/Form/Form.js","App.js","index.js"],"names":["User","props","console","log","user","className","style","maxWidth","name","movie","game","song","book","Form","htmlFor","type","id","onChange","handleInputChange","value","onClick","handleSubmit","App","state","event","target","setState","preventDefault","users","JSON","parse","stringify","push","this","map","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sLAiBeA,EAfF,SAACC,GAEZ,OADAC,QAAQC,IAAIF,EAAMG,MAEhB,sBAAKC,UAAU,+BAA+BC,MAAO,CAAEC,SAAU,SAAjE,UACE,qBAAKF,UAAU,cAAf,SAA8BJ,EAAMG,KAAKI,OACzC,sBAAKH,UAAU,YAAf,UACE,oBAAGA,UAAU,YAAb,oBAAiCJ,EAAMG,KAAKK,SAC5C,oBAAGJ,UAAU,YAAb,mBAAgCJ,EAAMG,KAAKM,QAC3C,oBAAGL,UAAU,YAAb,mBAAgCJ,EAAMG,KAAKO,QAC3C,oBAAGN,UAAU,YAAb,mBAAgCJ,EAAMG,KAAKQ,eCiDpCC,EA1DF,SAAAZ,GACX,OACE,iCACE,8BACE,uBAAOa,QAAQ,OAAf,kBACA,uBACEC,KAAK,OACLP,KAAK,OACLQ,GAAG,OACHC,SAAUhB,EAAMiB,kBAChBC,MAAOlB,EAAMO,UAGjB,8BACE,uBAAOM,QAAQ,QAAf,mBACA,uBACEC,KAAK,OACLP,KAAK,QACLQ,GAAG,QACHC,SAAUhB,EAAMiB,kBAChBC,MAAOlB,EAAMQ,WAGjB,8BACE,uBAAOK,QAAQ,OAAf,kBACA,uBACEC,KAAK,OACLP,KAAK,OACLQ,GAAG,OACHC,SAAUhB,EAAMiB,kBAChBC,MAAOlB,EAAMS,UAGjB,8BACE,uBAAOI,QAAQ,OAAf,kBACA,uBACEC,KAAK,OACLP,KAAK,OACLQ,GAAG,OACHC,SAAUhB,EAAMiB,kBAChBC,MAAOlB,EAAMU,UAGjB,8BACE,uBAAOG,QAAQ,OAAf,kBACA,uBACEC,KAAK,OACLP,KAAK,OACLQ,GAAG,OACHC,SAAUhB,EAAMiB,kBAChBC,MAAOlB,EAAMW,UAGjB,wBAAQQ,QAASnB,EAAMoB,aAAvB,kCCQSC,E,4MAzDbC,MAAQ,CACNf,KAAM,GACNC,MAAO,GACPC,KAAM,GACNC,KAAM,GACNC,KAAM,GACNR,KAAM,I,EAGRc,kBAAoB,SAAAM,GAClBtB,QAAQC,IAAIqB,EAAMC,OAAON,OACzB,EAAKO,SAAL,eAAiBF,EAAMC,OAAOjB,KAAOgB,EAAMC,OAAON,S,EAGpDE,aAAe,SAAAG,GACbA,EAAMG,iBAEN,IAAIC,EAAQC,KAAKC,MAAMD,KAAKE,UAAU,EAAKR,MAAMK,QAEjDA,EAAMI,KAAK,CACTxB,KAAM,EAAKe,MAAMf,KACjBC,MAAO,EAAKc,MAAMd,MAClBE,KAAM,EAAKY,MAAMZ,KACjBD,KAAM,EAAKa,MAAMb,KACjBE,KAAM,EAAKW,MAAMX,OAGnB,EAAKc,SAAS,CACZE,QACApB,KAAM,GACNC,MAAO,GACPC,KAAK,GACLC,KAAM,GACNC,KAAM,M,uDAKR,OACE,qCACA,cAAC,EAAD,CACEJ,KAAMyB,KAAKV,MAAMf,KACjBC,MAAOwB,KAAKV,MAAMd,MAClBC,KAAMuB,KAAKV,MAAMb,KACjBC,KAAMsB,KAAKV,MAAMZ,KACjBC,KAAMqB,KAAKV,MAAMX,KACjBM,kBAAmBe,KAAKV,MAAML,kBAC9BG,aAAcY,KAAKV,MAAMF,eAGzBY,KAAKV,MAAMK,MAAMM,KAAI,SAAA9B,GAAI,OAAI,cAAC,EAAD,CAAMA,KAAMA,c,GApD/B+B,aCAlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.66505592.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst User = (props) => {\r\n  console.log(props.user)\r\n  return (\r\n    <div className=\"card text-white bg-dark mb-3\" style={{ maxWidth: '18rem' }}>\r\n      <div className=\"card-header\">{props.user.name}</div>\r\n      <div className=\"card-body\">\r\n        <p className=\"card-text\">Movie: {props.user.movie}</p>\r\n        <p className=\"card-text\">Game: {props.user.game}</p>\r\n        <p className=\"card-text\">Song: {props.user.song}</p>\r\n        <p className=\"card-text\">Book: {props.user.book}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default User\r\n","import React from 'react'\r\n\r\nconst Form = props => {\r\n  return (\r\n    <form>\r\n      <p>\r\n        <label htmlFor='name'>name</label>\r\n        <input\r\n          type='text'\r\n          name='name'\r\n          id='name'\r\n          onChange={props.handleInputChange}\r\n          value={props.name}\r\n        />\r\n      </p>\r\n      <p>\r\n        <label htmlFor='movie'>movie</label>\r\n        <input\r\n          type='text'\r\n          name='movie'\r\n          id='movie'\r\n          onChange={props.handleInputChange}\r\n          value={props.movie}\r\n        />\r\n      </p>\r\n      <p>\r\n        <label htmlFor='game'>game</label>\r\n        <input\r\n          type='text'\r\n          name='game'\r\n          id='game'\r\n          onChange={props.handleInputChange}\r\n          value={props.game}\r\n        />\r\n      </p>\r\n      <p>\r\n        <label htmlFor='song'>song</label>\r\n        <input\r\n          type='text'\r\n          name='song'\r\n          id='song'\r\n          onChange={props.handleInputChange}\r\n          value={props.song}\r\n        />\r\n      </p>\r\n      <p>\r\n        <label htmlFor='book'>book</label>\r\n        <input\r\n          type='text'\r\n          name='book'\r\n          id='book'\r\n          onChange={props.handleInputChange}\r\n          value={props.book}\r\n        />\r\n      </p>\r\n      <button onClick={props.handleSubmit}>Submit Favorites</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default Form\r\n","import React, { Component } from 'react'\nimport User from './components/User'\nimport Form from './components/Form'\n\nclass App extends Component {\n\n  state = {\n    name: '',\n    movie: '',\n    game: '',\n    song: '',\n    book: '',\n    user: []\n  }\n\n  handleInputChange = event => {\n    console.log(event.target.value)\n    this.setState({ [event.target.name]: event.target.value})\n  }\n\n  handleSubmit = event => {\n    event.preventDefault()\n    \n    let users = JSON.parse(JSON.stringify(this.state.users))\n\n    users.push({\n      name: this.state.name,\n      movie: this.state.movie,\n      song: this.state.song,\n      game: this.state.game,\n      book: this.state.book\n    })\n\n    this.setState({ \n      users,\n      name: '',\n      movie: '',\n      game:'',\n      song: '',\n      book: ''\n    })\n  }\n\n  render() {\n    return (\n      <>\n      <Form \n        name={this.state.name}\n        movie={this.state.movie}\n        game={this.state.game}\n        song={this.state.song}\n        book={this.state.book}\n        handleInputChange={this.state.handleInputChange}\n        handleSubmit={this.state.handleSubmit}\n      />\n      {\n        this.state.users.map(user => <User user={user} />)\n      }\n      </>\n    )\n  }\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}